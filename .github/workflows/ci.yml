# =============================
# GitHub Actions CI Workflow
# =============================
# This workflow runs Continuous Integration (CI) for the repository.
# It performs:
#   - Python setup
#   - Dependency installation
#   - Linting
#   - Unit testing with coverage
#   - Security checks
#   - Uploading test coverage artifacts
# Triggers:
#   - On push or pull request to 'main'
#   - Manual trigger (workflow_dispatch)
#   - Scheduled run daily at 14:00 UTC
# =============================

name: CI  # Name of the workflow

# =============================
# Workflow triggers
# =============================
on:
  push:
    branches: [ main ]          # Run CI on push to 'main' branch
  pull_request:
    branches: [ main ]          # Run CI on PRs targeting 'main' branch
  workflow_dispatch:            # Allow manual trigger from GitHub UI
  schedule:                     # Schedule daily run at 14:00 UTC
    - cron: '0 14 * * *'

# =============================
# Define jobs
# =============================
jobs:
  test:
    runs-on: ubuntu-latest       # Use latest Ubuntu runner

    # =============================
    # Matrix strategy: run CI on multiple Python versions
    # =============================
    strategy:
      matrix:
        python-version: [3.10, 3.11]  # Test on both Python 3.10 and 3.11

    # =============================
    # Define steps in this job
    # =============================
    steps:

      # -----------------------------
      # Step 1: Checkout repository
      # -----------------------------
      - uses: actions/checkout@v4
        # This step checks out your repo code so the workflow can access it

      # -----------------------------
      # Step 2: Setup Python
      # -----------------------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
        # Sets up the Python environment for the selected version in the matrix

      # -----------------------------
      # Step 3: Cache pip dependencies
      # -----------------------------
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
        # Caches Python dependencies to speed up workflow runs
        # Reuses previous installs unless requirements.txt changed

      # -----------------------------
      # Step 4: Install dependencies
      # -----------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install project dependencies
          pip install langdetect            # Extra dependency for language detection
          pip install flake8 pytest pytest-cov safety
        # Installs linters, test tools, and security check tools

      # -----------------------------
      # Step 5: Lint code
      # -----------------------------
      - name: Lint code
        run: flake8 backend
        # Flake8 checks Python code for style and syntax issues in 'backend' folder

      # -----------------------------
      # Step 6: Run tests with coverage
      # -----------------------------
      - name: Run tests
        run: pytest --cov=backend tests/
        # Executes unit tests in 'tests/' folder
        # Generates coverage report for 'backend' code

      # -----------------------------
      # Step 7: Security check
      # -----------------------------
      - name: Security check
        run: safety check
        # Runs Safety to detect known security vulnerabilities in dependencies

      # -----------------------------
      # Step 8: Upload test coverage artifacts
      # -----------------------------
      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/
        # Uploads coverage reports (htmlcov folder) as workflow artifacts
        # Can be downloaded from GitHub Actions UI for review

      # -----------------------------
      # Optional: Notifications (commented out)
      # -----------------------------
      # - name: Notify Slack
      #   uses: slackapi/slack-github-action@v1.24.0
      #   with:
      #     channel-id: 'C12345678'
      #     slack-token: ${{ secrets.SLACK_TOKEN }}
      # This can be enabled to send Slack notifications on workflow completion
